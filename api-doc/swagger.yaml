openapi: 3.0.1
info:
  title: goBilling
  description: goBilling is an open-source billing and payments platform
  version: "1.0.0"
  contact:
    name: muhammad.shafiee@gmail.com
  license:
    name: The GNU General Public License, Version 3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
tags:
- name: invoicePayments
- name: export
- name: tags
- name: tenants
- name: paymentTransactions
- name: pluginsInfo
- name: subscriptions
- name: tagDefinitions
- name: customFields
- name: accounts
- name: bundles
- name: paymentMethods
- name: paymentGateways
- name: nodesInfo
- name: credits
- name: invoices
- name: admin
- name: security
- name: catalog
- name: usages
- name: payments
- name: overdue
servers:
- url: https://goBilling/
  description: goBilling server
paths:
  /api/v1/accounts:
    get:
      tags:
      - accounts
      summary: Retrieve an account by external key
      operationId: getAccountByKey
      parameters:
      - name: externalKey
        in: query
        schema:
          type: string
      - name: accountWithBalance
        in: query
        schema:
          type: boolean
          default: false
      - name: accountWithBalanceAndCBA
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountJson'
        404:
          description: Account not found
          content: {}
    post:
      tags:
      - accounts
      summary: Create account
      operationId: createAccount
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountJson'
        required: false
      responses:
        400:
          description: Invalid account data supplied
          content: {}
  /api/v1/accounts/pagination:
    get:
      tags:
      - accounts
      summary: List accounts
      operationId: getAccounts
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: accountWithBalance
        in: query
        schema:
          type: boolean
          default: false
      - name: accountWithBalanceAndCBA
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountJson'
  /api/v1/accounts/payments:
    post:
      tags:
      - accounts
      summary: Trigger a payment using the account external key (authorization, purchase or credit)
      operationId: processPaymentByExternalKey
      parameters:
      - name: externalKey
        in: query
        schema:
          type: string
      - name: paymentMethodId
        in: query
        schema:
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid account external key supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/accounts/search/{searchKey}:
    get:
      tags:
      - accounts
      summary: Search accounts
      operationId: searchAccounts
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: accountWithBalance
        in: query
        schema:
          type: boolean
          default: false
      - name: accountWithBalanceAndCBA
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountJson'
  /api/v1/accounts/{accountId}:
    get:
      tags:
      - accounts
      summary: Retrieve an account by id
      operationId: getAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: accountWithBalance
        in: query
        schema:
          type: boolean
          default: false
      - name: accountWithBalanceAndCBA
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
    put:
      tags:
      - accounts
      summary: Update account
      operationId: updateAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: treatNullAsReset
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountJson'
        required: false
      responses:
        400:
          description: Invalid account data supplied
          content: {}
    delete:
      tags:
      - accounts
      summary: Close account
      operationId: closeAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: cancelAllSubscriptions
        in: query
        schema:
          type: boolean
          default: false
      - name: writeOffUnpaidInvoices
        in: query
        schema:
          type: boolean
          default: false
      - name: itemAdjustUnpaidInvoices
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
  /api/v1/accounts/{accountId}/allCustomFields:
    get:
      tags:
      - accounts
      summary: Retrieve account customFields
      operationId: getAllCustomFields
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: objectType
        in: query
        schema:
          type: string
          enum:
          - ACCOUNT
          - ACCOUNT_EMAIL
          - BLOCKING_STATES
          - BUNDLE
          - CUSTOM_FIELD
          - INVOICE
          - PAYMENT
          - TRANSACTION
          - INVOICE_ITEM
          - INVOICE_PAYMENT
          - SUBSCRIPTION
          - SUBSCRIPTION_EVENT
          - SERVICE_BROADCAST
          - PAYMENT_ATTEMPT
          - PAYMENT_METHOD
          - REFUND
          - TAG
          - TAG_DEFINITION
          - TENANT
          - TENANT_KVS
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/allTags:
    get:
      tags:
      - accounts
      summary: Retrieve account tags
      operationId: getAllTags
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: objectType
        in: query
        schema:
          type: string
          enum:
          - ACCOUNT
          - ACCOUNT_EMAIL
          - BLOCKING_STATES
          - BUNDLE
          - CUSTOM_FIELD
          - INVOICE
          - PAYMENT
          - TRANSACTION
          - INVOICE_ITEM
          - INVOICE_PAYMENT
          - SUBSCRIPTION
          - SUBSCRIPTION_EVENT
          - SERVICE_BROADCAST
          - PAYMENT_ATTEMPT
          - PAYMENT_METHOD
          - REFUND
          - TAG
          - TAG_DEFINITION
          - TENANT
          - TENANT_KVS
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/block:
    get:
      tags:
      - accounts
      summary: Retrieve blocking states for account
      operationId: getBlockingStates
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: blockingStateTypes
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - SUBSCRIPTION
            - SUBSCRIPTION_BUNDLE
            - ACCOUNT
      - name: blockingStateSvcs
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlockingStateJson'
        400:
          description: Invalid account id supplied
          content: {}
    put:
      tags:
      - accounts
      summary: Block an account
      operationId: addAccountBlockingState
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockingStateJson'
        required: false
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/bundles:
    get:
      tags:
      - accounts
      summary: Retrieve bundles for account
      operationId: getAccountBundles
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: externalKey
        in: query
        schema:
          type: string
      - name: bundlesFilter
        in: query
        schema:
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundleJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/cbaRebalancing:
    post:
      tags:
      - accounts
      summary: Rebalance account CBA
      operationId: rebalanceExistingCBAOnAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
  /api/v1/accounts/{accountId}/children:
    get:
      tags:
      - accounts
      summary: List children accounts
      operationId: getChildrenAccounts
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: accountWithBalance
        in: query
        schema:
          type: boolean
          default: false
      - name: accountWithBalanceAndCBA
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountJson'
        400:
          description: Invalid parent account id supplied
          content: {}
        404:
          description: Parent Account not found
          content: {}
  /api/v1/accounts/{accountId}/customFields:
    get:
      tags:
      - accounts
      summary: Retrieve account custom fields
      operationId: getCustomFields
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid account id supplied
          content: {}
    post:
      tags:
      - accounts
      summary: Add custom fields to account
      operationId: createCustomFields
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid account id supplied
          content: {}
    delete:
      tags:
      - accounts
      summary: Remove custom fields from account
      operationId: deleteCustomFields
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
  /api/v1/accounts/{accountId}/emailNotifications:
    get:
      tags:
      - accounts
      summary: Retrieve account email notification
      operationId: getEmailNotificationsForAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceEmailJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
    put:
      tags:
      - accounts
      summary: Set account email notification
      operationId: setEmailNotificationsForAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceEmailJson'
        required: false
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/emails:
    get:
      tags:
      - accounts
      summary: Retrieve an account emails
      operationId: getEmails
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountEmailJson'
        400:
          description: Invalid account id supplied
          content: {}
    post:
      tags:
      - accounts
      summary: Add account email
      operationId: addEmail
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountEmailJson'
        required: false
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/emails/{email}:
    delete:
      tags:
      - accounts
      summary: Delete email from account
      operationId: removeEmail
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: email
        in: path
        required: true
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
  /api/v1/accounts/{accountId}/invoicePayments:
    get:
      tags:
      - accounts
      summary: Retrieve account invoice payments
      operationId: getInvoicePayments
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
    post:
      tags:
      - accounts
      summary: Trigger a payment for all unpaid invoices
      operationId: payAllInvoices
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: externalPayment
        in: query
        schema:
          type: boolean
          default: false
      - name: paymentAmount
        in: query
        schema:
          type: number
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/invoices:
    get:
      tags:
      - accounts
      summary: Retrieve account invoices
      operationId: getInvoices
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: withItems
        in: query
        schema:
          type: boolean
          default: false
      - name: withMigrationInvoices
        in: query
        schema:
          type: boolean
          default: false
      - name: unpaidInvoicesOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/overdue:
    get:
      tags:
      - accounts
      summary: Retrieve overdue state for account
      operationId: getOverdueAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverdueStateJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/paymentMethods:
    get:
      tags:
      - accounts
      summary: Retrieve account payment methods
      operationId: getPaymentMethods
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethodJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
    post:
      tags:
      - accounts
      summary: Add a payment method
      operationId: createPaymentMethod
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: isDefault
        in: query
        schema:
          type: boolean
          default: false
      - name: payAllUnpaidInvoices
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodJson'
        required: false
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/paymentMethods/refresh:
    post:
      tags:
      - accounts
      summary: Refresh account payment methods
      operationId: refreshPaymentMethods
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: pluginName
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/paymentMethods/{paymentMethodId}/setDefault:
    put:
      tags:
      - accounts
      summary: Set the default payment method
      operationId: setDefaultPaymentMethod
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: paymentMethodId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: payAllUnpaidInvoices
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id or payment method id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{accountId}/payments:
    get:
      tags:
      - accounts
      summary: Retrieve account payments
      operationId: getPayments
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentJson'
        400:
          description: Invalid account id supplied
          content: {}
    post:
      tags:
      - accounts
      summary: Trigger a payment (authorization, purchase or credit)
      operationId: processPayment
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: paymentMethodId
        in: query
        schema:
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid account id supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/accounts/{accountId}/tags:
    get:
      tags:
      - accounts
      summary: Retrieve account tags
      operationId: getTags
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
    post:
      tags:
      - accounts
      summary: Add tags to account
      operationId: createTags
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied
          content: {}
    delete:
      tags:
      - accounts
      summary: Remove tags from account
      operationId: deleteTags
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id supplied or account does not have a default payment method (AUTO_PAY_OFF tag only)
          content: {}
  /api/v1/accounts/{accountId}/timeline:
    get:
      tags:
      - accounts
      summary: Retrieve account timeline
      operationId: getAccountTimeline
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: parallel
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTimelineJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/accounts/{childAccountId}/transferCredit:
    post:
      tags:
      - accounts
      summary: Move a given child credit to the parent level
      operationId: transferChildCreditToParent
      parameters:
      - name: childAccountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Account does not have credit
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/admin/cache:
    delete:
      tags:
      - admin
      summary: Invalidates the given Cache if specified, otherwise invalidates all caches
      operationId: invalidatesCache
      parameters:
      - name: cacheName
        in: query
        schema:
          type: string
      responses:
        400:
          description: Cache name does not exist or is not alive
          content: {}
  /api/v1/admin/cache/accounts/{accountId}:
    delete:
      tags:
      - admin
      summary: Invalidates Caches per account level
      operationId: invalidatesCacheByAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/admin/cache/tenants:
    delete:
      tags:
      - admin
      summary: Invalidates Caches per tenant level
      operationId: invalidatesCacheByTenant
      parameters:
      - name: tenantApiKey
        in: query
        schema:
          type: string
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/admin/healthcheck:
    post:
      tags:
      - admin
      summary: Put the host out of rotation
      operationId: putInRotation
      responses:
        default:
          description: successful operation
          content: {}
    delete:
      tags:
      - admin
      summary: Put the host out of rotation
      operationId: putOutOfRotation
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/admin/invoices:
    post:
      tags:
      - admin
      summary: Trigger an invoice generation for all parked accounts
      operationId: triggerInvoiceGenerationForParkedAccounts
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/admin/payments/{paymentId}/transactions/{paymentTransactionId}:
    put:
      tags:
      - admin
      summary: Update existing paymentTransaction and associated payment state
      operationId: updatePaymentTransactionState
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: paymentTransactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPaymentJson'
        required: false
      responses:
        400:
          description: Invalid account data supplied
          content: {}
  /api/v1/admin/queues:
    get:
      tags:
      - admin
      summary: Get queues entries
      operationId: getQueueEntries
      parameters:
      - name: accountId
        in: query
        schema:
          type: string
      - name: queueName
        in: query
        schema:
          type: string
      - name: serviceName
        in: query
        schema:
          type: string
      - name: withHistory
        in: query
        schema:
          type: boolean
          default: true
      - name: minDate
        in: query
        schema:
          type: string
      - name: maxDate
        in: query
        schema:
          type: string
      - name: withInProcessing
        in: query
        schema:
          type: boolean
          default: true
      - name: withBusEvents
        in: query
        schema:
          type: boolean
          default: true
      - name: withNotifications
        in: query
        schema:
          type: boolean
          default: true
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/bundles:
    get:
      tags:
      - bundles
      summary: Retrieve a bundle by external key
      operationId: getBundleByKey
      parameters:
      - name: externalKey
        in: query
        schema:
          type: string
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleJson'
        404:
          description: Bundle not found
          content: {}
  /api/v1/bundles/pagination:
    get:
      tags:
      - bundles
      summary: List bundles
      operationId: getBundles
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundleJson'
  /api/v1/bundles/search/{searchKey}:
    get:
      tags:
      - bundles
      summary: Search bundles
      operationId: searchBundles
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundleJson'
  /api/v1/bundles/{bundleId}:
    get:
      tags:
      - bundles
      summary: Retrieve a bundle by id
      operationId: getBundle
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleJson'
        400:
          description: Invalid bundle id supplied
          content: {}
        404:
          description: Bundle not found
          content: {}
    put:
      tags:
      - bundles
      summary: Transfer a bundle to another account
      operationId: transferBundle
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: billingPolicy
        in: query
        schema:
          type: string
          default: END_OF_TERM
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleJson'
        required: false
      responses:
        400:
          description: Invalid bundle id, requested date or policy supplied
          content: {}
        404:
          description: Bundle not found
          content: {}
  /api/v1/bundles/{bundleId}/block:
    put:
      tags:
      - bundles
      summary: Block a bundle
      operationId: addBundleBlockingState
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockingStateJson'
        required: false
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
        404:
          description: Bundle not found
          content: {}
  /api/v1/bundles/{bundleId}/customFields:
    get:
      tags:
      - bundles
      summary: Retrieve bundle custom fields
      operationId: getCustomFields
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid bundle id supplied
          content: {}
    post:
      tags:
      - bundles
      summary: Add custom fields to bundle
      operationId: createCustomFields
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
    delete:
      tags:
      - bundles
      summary: Remove custom fields from bundle
      operationId: deleteCustomFields
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
  /api/v1/bundles/{bundleId}/pause:
    put:
      tags:
      - bundles
      summary: Pause a bundle
      operationId: pauseBundle
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
        404:
          description: Bundle not found
          content: {}
  /api/v1/bundles/{bundleId}/resume:
    put:
      tags:
      - bundles
      summary: Resume a bundle
      operationId: resumeBundle
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
        404:
          description: Bundle not found
          content: {}
  /api/v1/bundles/{bundleId}/tags:
    get:
      tags:
      - bundles
      summary: Retrieve bundle tags
      operationId: getTags
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid bundle id supplied
          content: {}
        404:
          description: Bundle not found
          content: {}
    post:
      tags:
      - bundles
      summary: Add tags to bundle
      operationId: createTags
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
    delete:
      tags:
      - bundles
      summary: Remove tags from bundle
      operationId: deleteTags
      parameters:
      - name: bundleId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid bundle id supplied
          content: {}
  /api/v1/catalog:
    get:
      tags:
      - catalog
      summary: Retrieve the catalog as JSON
      operationId: getCatalogJson
      parameters:
      - name: requestedDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticCatalog'
    post:
      tags:
      - catalog
      summary: Upload the full catalog as XML
      operationId: uploadCatalogXml
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/xml:
            schema:
              type: string
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/catalog/availableAddons:
    get:
      tags:
      - catalog
      summary: Retrieve available add-ons for a given product
      operationId: getAvailableAddons
      parameters:
      - name: baseProductName
        in: query
        schema:
          type: string
      - name: priceListName
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanDetailJson'
  /api/v1/catalog/availableBasePlans:
    get:
      tags:
      - catalog
      summary: Retrieve available base plans
      operationId: getAvailableBasePlans
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanDetailJson'
  /api/v1/catalog/phase:
    get:
      tags:
      - catalog
      summary: Retrieve phase for a given subscription and date
      operationId: getPhaseForSubscriptionAndDate
      parameters:
      - name: subscriptionId
        in: query
        schema:
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseJson'
  /api/v1/catalog/plan:
    get:
      tags:
      - catalog
      summary: Retrieve plan for a given subscription and date
      operationId: getPlanForSubscriptionAndDate
      parameters:
      - name: subscriptionId
        in: query
        schema:
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanJson'
  /api/v1/catalog/priceList:
    get:
      tags:
      - catalog
      summary: Retrieve priceList for a given subscription and date
      operationId: getPriceListForSubscriptionAndDate
      parameters:
      - name: subscriptionId
        in: query
        schema:
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListJson'
  /api/v1/catalog/product:
    get:
      tags:
      - catalog
      summary: Retrieve product for a given subscription and date
      operationId: getProductForSubscriptionAndDate
      parameters:
      - name: subscriptionId
        in: query
        schema:
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductJson'
  /api/v1/catalog/simplePlan:
    post:
      tags:
      - catalog
      summary: Upload the full catalog as XML
      operationId: addSimplePlan
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePlanJson'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/credits:
    post:
      tags:
      - credits
      summary: Create a credit
      operationId: createCredit
      parameters:
      - name: autoCommit
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditJson'
        required: false
      responses:
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/credits/{creditId}:
    get:
      tags:
      - credits
      summary: Retrieve a credit by id
      operationId: getCredit
      parameters:
      - name: creditId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditJson'
        400:
          description: Invalid credit id supplied
          content: {}
        404:
          description: Credit not found
          content: {}
  /api/v1/customFields/pagination:
    get:
      tags:
      - customFields
      summary: List custom fields
      operationId: getCustomFields
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
  /api/v1/customFields/search/{searchKey}:
    get:
      tags:
      - customFields
      summary: Search custom fields
      operationId: searchCustomFields
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
  /api/v1/export/{accountId}:
    get:
      tags:
      - export
      summary: Export account data
      operationId: exportDataForAccount
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/invoicePayments/{paymentId}:
    get:
      tags:
      - invoicePayments
      summary: Retrieve a payment by id
      operationId: getInvoicePayment
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePaymentJson'
        400:
          description: Invalid payment id supplied
          content: {}
        404:
          description: Payment not found
          content: {}
  /api/v1/invoicePayments/{paymentId}/chargebackReversals:
    post:
      tags:
      - invoicePayments
      summary: Record a chargebackReversal
      operationId: createChargebackReversal
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentTransactionJson'
        required: false
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
        404:
          description: Account or payment not found
          content: {}
  /api/v1/invoicePayments/{paymentId}/chargebacks:
    post:
      tags:
      - invoicePayments
      summary: Record a chargeback
      operationId: createChargeback
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentTransactionJson'
        required: false
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
        404:
          description: Account or payment not found
          content: {}
  /api/v1/invoicePayments/{paymentId}/customFields:
    get:
      tags:
      - invoicePayments
      summary: Retrieve payment custom fields
      operationId: getCustomFields
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid payment id supplied
          content: {}
    post:
      tags:
      - invoicePayments
      summary: Add custom fields to payment
      operationId: createCustomFields
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
    delete:
      tags:
      - invoicePayments
      summary: Remove custom fields from payment
      operationId: deleteCustomFields
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
  /api/v1/invoicePayments/{paymentId}/refunds:
    post:
      tags:
      - invoicePayments
      summary: Refund a payment, and adjust the invoice if needed
      operationId: createRefundWithAdjustments
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: externalPayment
        in: query
        schema:
          type: boolean
          default: false
      - name: paymentMethodId
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentTransactionJson'
        required: false
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
        404:
          description: Account or payment not found
          content: {}
  /api/v1/invoicePayments/{paymentId}/tags:
    get:
      tags:
      - invoicePayments
      summary: Retrieve payment tags
      operationId: getTags
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid payment id supplied
          content: {}
        404:
          description: Payment not found
          content: {}
    post:
      tags:
      - invoicePayments
      summary: Add tags to payment
      operationId: createTags
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
    delete:
      tags:
      - invoicePayments
      summary: Remove tags from payment
      operationId: deleteTags
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
  /api/v1/invoices:
    post:
      tags:
      - invoices
      summary: Trigger an invoice generation
      operationId: createFutureInvoice
      parameters:
      - name: accountId
        in: query
        schema:
          type: string
      - name: targetDate
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceJson'
        400:
          description: Invalid account id or target datetime supplied
          content: {}
  /api/v1/invoices/catalogTranslation/{locale}:
    post:
      tags:
      - invoices
      summary: Upload the catalog translation for the tenant
      operationId: uploadCatalogTranslation
      parameters:
      - name: locale
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: deleteIfExists
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/invoices/charges/{accountId}:
    post:
      tags:
      - invoices
      summary: Create external charge(s)
      operationId: createExternalCharges
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: payInvoice
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: autoCommit
        in: query
        schema:
          type: boolean
          default: false
      - name: paymentExternalKey
        in: query
        schema:
          type: string
      - name: transactionExternalKey
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IterableInvoiceItemJson'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItemJson'
        400:
          description: Invalid account id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/invoices/dryRun:
    post:
      tags:
      - invoices
      summary: Generate a dryRun invoice
      operationId: generateDryRunInvoice
      parameters:
      - name: accountId
        in: query
        schema:
          type: string
      - name: targetDate
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceDryRunJson'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceJson'
        400:
          description: Invalid account id or target datetime supplied
          content: {}
  /api/v1/invoices/manualPayTemplate:
    post:
      tags:
      - invoices
      summary: Upload the manualPay invoice template for the tenant
      operationId: uploadInvoiceMPTemplate
      parameters:
      - name: deleteIfExists
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/html:
            schema:
              type: string
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/invoices/migration/{accountId}:
    post:
      tags:
      - invoices
      summary: Create a migration invoice
      operationId: createMigrationInvoice
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: targetDate
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IterableInvoiceItemJson'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceJson'
        400:
          description: Invalid account id or target datetime supplied
          content: {}
  /api/v1/invoices/pagination:
    get:
      tags:
      - invoices
      summary: List invoices
      operationId: getInvoices
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: withItems
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceJson'
  /api/v1/invoices/search/{searchKey}:
    get:
      tags:
      - invoices
      summary: Search invoices
      operationId: searchInvoices
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: withItems
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceJson'
  /api/v1/invoices/template:
    post:
      tags:
      - invoices
      summary: Upload the invoice template for the tenant
      operationId: uploadInvoiceTemplate
      parameters:
      - name: deleteIfExists
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/html:
            schema:
              type: string
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/invoices/translation/{locale}:
    post:
      tags:
      - invoices
      summary: Upload the invoice translation for the tenant
      operationId: uploadInvoiceTranslation
      parameters:
      - name: locale
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: deleteIfExists
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/invoices/{invoiceId}:
    get:
      tags:
      - invoices
      summary: Retrieve an invoice by id
      operationId: getInvoice
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: withItems
        in: query
        schema:
          type: boolean
          default: false
      - name: withChildrenItems
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceJson'
        400:
          description: Invalid invoice id supplied
          content: {}
        404:
          description: Invoice not found
          content: {}
    post:
      tags:
      - invoices
      summary: Adjust an invoice item
      operationId: adjustInvoiceItem
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItemJson'
        required: false
      responses:
        400:
          description: Invalid account id, invoice id or invoice item id supplied
          content: {}
        404:
          description: Invoice not found
          content: {}
  /api/v1/invoices/{invoiceId}/commitInvoice:
    put:
      tags:
      - invoices
      summary: Perform the invoice status transition from DRAFT to COMMITTED
      operationId: commitInvoice
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        404:
          description: Invoice not found
          content: {}
  /api/v1/invoices/{invoiceId}/customFields:
    get:
      tags:
      - invoices
      summary: Retrieve invoice custom fields
      operationId: getCustomFields
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid invoice id supplied
          content: {}
    post:
      tags:
      - invoices
      summary: Add custom fields to invoice
      operationId: createCustomFields
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid invoice id supplied
          content: {}
    delete:
      tags:
      - invoices
      summary: Remove custom fields from invoice
      operationId: deleteCustomFields
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid invoice id supplied
          content: {}
  /api/v1/invoices/{invoiceId}/emailNotifications:
    post:
      tags:
      - invoices
      summary: Trigger an email notification for invoice
      operationId: triggerEmailNotificationForInvoice
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid invoice id supplied
          content: {}
        404:
          description: Account or invoice not found
          content: {}
  /api/v1/invoices/{invoiceId}/html:
    get:
      tags:
      - invoices
      summary: Render an invoice as HTML
      operationId: getInvoiceAsHTML
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/html:
              schema:
                type: string
        404:
          description: Invoice not found
          content: {}
  /api/v1/invoices/{invoiceId}/payments:
    get:
      tags:
      - invoices
      summary: Retrieve payments associated with an invoice
      operationId: getPayments
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentJson'
        400:
          description: Invalid invoice id supplied
          content: {}
        404:
          description: Invoice not found
          content: {}
    post:
      tags:
      - invoices
      summary: Trigger a payment for invoice
      operationId: createInstantPayment
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: externalPayment
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePaymentJson'
        required: false
      responses:
        400:
          description: Invalid account id or invoice id supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/invoices/{invoiceId}/tags:
    get:
      tags:
      - invoices
      summary: Retrieve invoice tags
      operationId: getTags
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid invoice id supplied
          content: {}
        404:
          description: Invoice not found
          content: {}
    post:
      tags:
      - invoices
      summary: Add tags to invoice
      operationId: createTags
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid invoice id supplied
          content: {}
    delete:
      tags:
      - invoices
      summary: Remove tags from invoice
      operationId: deleteTags
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid invoice id supplied
          content: {}
  /api/v1/invoices/{invoiceId}/{invoiceItemId}/cba:
    delete:
      tags:
      - invoices
      summary: Delete a CBA item
      operationId: deleteCBA
      parameters:
      - name: invoiceId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: invoiceItemId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: accountId
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid account id, invoice id or invoice item id supplied
          content: {}
        404:
          description: Account or invoice not found
          content: {}
  /api/v1/invoices/{invoiceNumber}:
    get:
      tags:
      - invoices
      summary: Retrieve an invoice by number
      operationId: getInvoiceByNumber
      parameters:
      - name: invoiceNumber
        in: path
        required: true
        schema:
          pattern: '[0-9]+'
          type: integer
          format: int32
      - name: withItems
        in: query
        schema:
          type: boolean
          default: false
      - name: withChildrenItems
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceJson'
        404:
          description: Invoice not found
          content: {}
  /api/v1/nodesInfo:
    get:
      tags:
      - nodesInfo
      summary: Retrieve all the nodes infos
      operationId: getNodesInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginInfoJson'
    post:
      tags:
      - nodesInfo
      summary: Trigger a node command
      operationId: triggerNodeCommand
      parameters:
      - name: localNodeOnly
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCommandJson'
        required: false
      responses:
        400:
          description: Invalid node command supplied
          content: {}
  /api/v1/overdue:
    get:
      tags:
      - overdue
      summary: Retrieve the overdue config as JSON
      operationId: getOverdueConfigJson
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverdueJson'
    post:
      tags:
      - overdue
      summary: Upload the full overdue config as JSON
      operationId: uploadOverdueConfigJson
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OverdueJson'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/paymentGateways/hosted/form:
    post:
      tags:
      - paymentGateways
      summary: Combo API to generate form data to redirect the customer to the gateway
      operationId: buildComboFormDescriptor
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComboHostedPaymentPageJson'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPaymentPageFormDescriptorJson'
        400:
          description: Invalid data for Account or PaymentMethod
          content: {}
  /api/v1/paymentGateways/hosted/form/{accountId}:
    post:
      tags:
      - paymentGateways
      summary: Generate form data to redirect the customer to the gateway
      operationId: buildFormDescriptor
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: paymentMethodId
        in: query
        schema:
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostedPaymentPageFieldsJson'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPaymentPageFormDescriptorJson'
        400:
          description: Invalid accountId supplied
          content: {}
        404:
          description: Account not found
          content: {}
  /api/v1/paymentGateways/notification/{pluginName}:
    post:
      tags:
      - paymentGateways
      summary: Process a gateway notification
      description: The response is built by the appropriate plugin
      operationId: processNotification
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/paymentMethods:
    get:
      tags:
      - paymentMethods
      summary: Retrieve a payment method by external key
      operationId: getPaymentMethodByKey
      parameters:
      - name: externalKey
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodJson'
        404:
          description: Account or payment method not found
          content: {}
  /api/v1/paymentMethods/pagination:
    get:
      tags:
      - paymentMethods
      summary: List payment methods
      operationId: getPaymentMethods
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: pluginName
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethodJson'
  /api/v1/paymentMethods/search/{searchKey}:
    get:
      tags:
      - paymentMethods
      summary: Search payment methods
      operationId: searchPaymentMethods
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: pluginName
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethodJson'
  /api/v1/paymentMethods/{paymentMethodId}:
    get:
      tags:
      - paymentMethods
      summary: Retrieve a payment method by id
      operationId: getPaymentMethod
      parameters:
      - name: paymentMethodId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodJson'
        400:
          description: Invalid paymentMethodId supplied
          content: {}
        404:
          description: Account or payment method not found
          content: {}
    delete:
      tags:
      - paymentMethods
      summary: Delete a payment method
      operationId: deletePaymentMethod
      parameters:
      - name: paymentMethodId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: deleteDefaultPmWithAutoPayOff
        in: query
        schema:
          type: boolean
          default: false
      - name: forceDefaultPmDeletion
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid paymentMethodId supplied
          content: {}
        404:
          description: Account or payment method not found
          content: {}
  /api/v1/paymentMethods/{paymentMethodId}/customFields:
    get:
      tags:
      - paymentMethods
      summary: Retrieve payment method custom fields
      operationId: getCustomFields
      parameters:
      - name: paymentMethodId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid payment method id supplied
          content: {}
    post:
      tags:
      - paymentMethods
      summary: Add custom fields to payment method
      operationId: createCustomFields
      parameters:
      - name: paymentMethodId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid payment method id supplied
          content: {}
    delete:
      tags:
      - paymentMethods
      summary: Remove custom fields from payment method
      operationId: deleteCustomFields
      parameters:
      - name: paymentMethodId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment method id supplied
          content: {}
  /api/v1/paymentTransactions/{transactionId}:
    get:
      tags:
      - paymentTransactions
      summary: Retrieve a payment by transaction id
      operationId: getPaymentByTransactionId
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentJson'
        404:
          description: Payment not found
          content: {}
    post:
      tags:
      - paymentTransactions
      summary: Mark a pending payment transaction as succeeded or failed
      operationId: notifyStateChanged
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        400:
          description: Invalid paymentId supplied
          content: {}
        404:
          description: Account or Payment not found
          content: {}
  /api/v1/paymentTransactions/{transactionId}/customFields:
    get:
      tags:
      - paymentTransactions
      summary: Retrieve payment transaction custom fields
      operationId: getCustomFields
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid transaction id supplied
          content: {}
    post:
      tags:
      - paymentTransactions
      summary: Add custom fields to payment transaction
      operationId: createCustomFields
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid transaction id supplied
          content: {}
    delete:
      tags:
      - paymentTransactions
      summary: Remove custom fields from payment transaction
      operationId: deleteCustomFields
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid transaction id supplied
          content: {}
  /api/v1/paymentTransactions/{transactionId}/tags:
    get:
      tags:
      - paymentTransactions
      summary: Retrieve payment transaction tags
      operationId: getTags
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid transaction id supplied
          content: {}
        404:
          description: Invoice not found
          content: {}
    post:
      tags:
      - paymentTransactions
      summary: Add tags to payment transaction
      operationId: createTags
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid transaction id supplied
          content: {}
    delete:
      tags:
      - paymentTransactions
      summary: Remove tags from payment transaction
      operationId: deleteTags
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid transaction id supplied
          content: {}
  /api/v1/payments:
    get:
      tags:
      - payments
      summary: Retrieve a payment by external key
      operationId: getPaymentByExternalKey
      parameters:
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      - name: externalKey
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentJson'
        404:
          description: Payment not found
          content: {}
    put:
      tags:
      - payments
      summary: Complete an existing transaction
      operationId: completeTransactionByExternalKey
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
    post:
      tags:
      - payments
      summary: Capture an existing authorization
      operationId: captureAuthorizationByExternalKey
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
    delete:
      tags:
      - payments
      summary: Void an existing payment
      operationId: voidPaymentByExternalKey
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/cancelScheduledPaymentTransaction:
    delete:
      tags:
      - payments
      summary: Cancels a scheduled payment attempt retry
      operationId: cancelScheduledPaymentTransactionByExternalKey
      parameters:
      - name: transactionExternalKey
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid paymentTransactionExternalKey supplied
          content: {}
  /api/v1/payments/chargebackReversals:
    post:
      tags:
      - payments
      summary: Record a chargeback reversal
      operationId: chargebackReversalPaymentByExternalKey
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/chargebacks:
    post:
      tags:
      - payments
      summary: Record a chargeback
      operationId: chargebackPaymentByExternalKey
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/combo:
    post:
      tags:
      - payments
      summary: 'Combo api to create a new payment transaction on a existing (or not)
        account '
      operationId: createComboPayment
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComboPaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid data for Account or PaymentMethod
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/pagination:
    get:
      tags:
      - payments
      summary: Get payments
      operationId: getPayments
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: pluginName
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentJson'
  /api/v1/payments/refunds:
    post:
      tags:
      - payments
      summary: Refund an existing payment
      operationId: refundPaymentByExternalKey
      parameters:
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/search/{searchKey}:
    get:
      tags:
      - payments
      summary: Search payments
      operationId: searchPayments
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: pluginName
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentJson'
  /api/v1/payments/{paymentId}:
    get:
      tags:
      - payments
      summary: Retrieve a payment by id
      operationId: getPayment
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: withPluginInfo
        in: query
        schema:
          type: boolean
          default: false
      - name: withAttempts
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentJson'
        400:
          description: Invalid paymentId supplied
          content: {}
        404:
          description: Payment not found
          content: {}
    put:
      tags:
      - payments
      summary: Complete an existing transaction
      operationId: completeTransaction
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid paymentId supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
    post:
      tags:
      - payments
      summary: Capture an existing authorization
      operationId: captureAuthorization
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid paymentId supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
    delete:
      tags:
      - payments
      summary: Void an existing payment
      operationId: voidPayment
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid paymentId supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/{paymentId}/chargebackReversals:
    post:
      tags:
      - payments
      summary: Record a chargeback reversal
      operationId: chargebackReversalPayment
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid paymentId supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/{paymentId}/chargebacks:
    post:
      tags:
      - payments
      summary: Record a chargeback
      operationId: chargebackPayment
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid paymentId supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/{paymentId}/customFields:
    get:
      tags:
      - payments
      summary: Retrieve payment custom fields
      operationId: getCustomFields
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid payment id supplied
          content: {}
    post:
      tags:
      - payments
      summary: Add custom fields to payment
      operationId: createCustomFields
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
    delete:
      tags:
      - payments
      summary: Remove custom fields from payment payment
      operationId: deleteCustomFields
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
  /api/v1/payments/{paymentId}/refunds:
    post:
      tags:
      - payments
      summary: Refund an existing payment
      operationId: refundPayment
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: controlPluginName
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTransactionJson'
        required: false
      responses:
        201:
          description: Payment transaction created successfully
          content: {}
        400:
          description: Invalid paymentId supplied
          content: {}
        402:
          description: Transaction declined by gateway
          content: {}
        404:
          description: Account or payment not found
          content: {}
        422:
          description: Payment is aborted by a control plugin
          content: {}
        502:
          description: Failed to submit payment transaction
          content: {}
        503:
          description: Payment in unknown status, failed to receive gateway response
          content: {}
        504:
          description: Payment operation timeout
          content: {}
  /api/v1/payments/{paymentId}/tags:
    get:
      tags:
      - payments
      summary: Retrieve payment payment tags
      operationId: getTags
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid payment id supplied
          content: {}
        404:
          description: Invoice not found
          content: {}
    post:
      tags:
      - payments
      summary: Add tags to payment payment
      operationId: createTags
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
    delete:
      tags:
      - payments
      summary: Remove tags from payment payment
      operationId: deleteTags
      parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid payment id supplied
          content: {}
  /api/v1/payments/{paymentTransactionId}/cancelScheduledPaymentTransaction:
    delete:
      tags:
      - payments
      summary: Cancels a scheduled payment attempt retry
      operationId: cancelScheduledPaymentTransactionById
      parameters:
      - name: paymentTransactionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid paymentTransactionId supplied
          content: {}
  /api/v1/pluginsInfo:
    get:
      tags:
      - pluginsInfo
      summary: Retrieve the list of registered plugins
      operationId: getPluginsInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginInfoJson'
  /api/v1/security/permissions:
    get:
      tags:
      - security
      summary: List user permissions
      operationId: getCurrentUserPermissions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/security/roles:
    post:
      tags:
      - security
      summary: Add a new role definition)
      operationId: addRoleDefinition
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinitionJson'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/security/subject:
    get:
      tags:
      - security
      summary: Get user information
      operationId: getCurrentUserSubject
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectJson'
  /api/v1/security/users:
    post:
      tags:
      - security
      summary: Add a new user with roles (to make api requests)
      operationId: addUserRoles
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRolesJson'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/security/users/{username}:
    delete:
      tags:
      - security
      summary: Invalidate an existing user
      operationId: invalidateUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/security/users/{username}/password:
    put:
      tags:
      - security
      summary: Update a user password
      operationId: updateUserPassword
      parameters:
      - name: username
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRolesJson'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/security/users/{username}/roles:
    get:
      tags:
      - security
      summary: Get roles associated to a user
      operationId: getUserRoles
      parameters:
      - name: username
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        default:
          description: successful operation
          content: {}
    put:
      tags:
      - security
      summary: Update roles associated to a user
      operationId: updateUserRoles
      parameters:
      - name: username
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRolesJson'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
  /api/v1/subscriptions:
    post:
      tags:
      - subscriptions
      summary: Create an entitlement
      operationId: createEntitlement
      parameters:
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: entitlementDate
        in: query
        schema:
          type: string
      - name: billingDate
        in: query
        schema:
          type: string
      - name: migrated
        in: query
        schema:
          type: boolean
          default: false
      - name: bcd
        in: query
        schema:
          type: integer
          format: int32
      - name: callCompletion
        in: query
        schema:
          type: boolean
          default: false
      - name: callTimeoutSec
        in: query
        schema:
          type: integer
          format: int64
          default: 3
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionJson'
        required: false
      responses:
        400:
          description: Invalid entitlement supplied
          content: {}
  /api/v1/subscriptions/createEntitlementWithAddOns:
    post:
      tags:
      - subscriptions
      summary: Create an entitlement with addOn products
      operationId: createEntitlementWithAddOns
      parameters:
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: entitlementDate
        in: query
        schema:
          type: string
      - name: billingDate
        in: query
        schema:
          type: string
      - name: migrated
        in: query
        schema:
          type: boolean
          default: false
      - name: callCompletion
        in: query
        schema:
          type: boolean
          default: false
      - name: callTimeoutSec
        in: query
        schema:
          type: integer
          format: int64
          default: 3
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionJson'
        required: false
      responses:
        400:
          description: Invalid entitlement supplied
          content: {}
  /api/v1/subscriptions/createEntitlementsWithAddOns:
    post:
      tags:
      - subscriptions
      summary: Create multiple entitlements with addOn products
      operationId: createEntitlementsWithAddOns
      parameters:
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: entitlementDate
        in: query
        schema:
          type: string
      - name: billingDate
        in: query
        schema:
          type: string
      - name: migrated
        in: query
        schema:
          type: boolean
          default: false
      - name: callCompletion
        in: query
        schema:
          type: boolean
          default: false
      - name: callTimeoutSec
        in: query
        schema:
          type: integer
          format: int64
          default: 3
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BulkBaseSubscriptionAndAddOnsJson'
        required: false
      responses:
        400:
          description: Invalid entitlements supplied
          content: {}
  /api/v1/subscriptions/{subscriptionId}:
    get:
      tags:
      - subscriptions
      summary: Retrieve a subscription by id
      operationId: getEntitlement
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionJson'
        400:
          description: Invalid subscription id supplied
          content: {}
        404:
          description: Subscription not found
          content: {}
    put:
      tags:
      - subscriptions
      summary: Change entitlement plan
      operationId: changeEntitlementPlan
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: callCompletion
        in: query
        schema:
          type: boolean
          default: false
      - name: callTimeoutSec
        in: query
        schema:
          type: integer
          format: int64
          default: 3
      - name: billingPolicy
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionJson'
        required: false
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
        404:
          description: Entitlement not found
          content: {}
    delete:
      tags:
      - subscriptions
      summary: Cancel an entitlement plan
      operationId: cancelEntitlementPlan
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: callCompletion
        in: query
        schema:
          type: boolean
          default: false
      - name: callTimeoutSec
        in: query
        schema:
          type: integer
          format: int64
          default: 5
      - name: entitlementPolicy
        in: query
        schema:
          type: string
      - name: billingPolicy
        in: query
        schema:
          type: string
      - name: useRequestedDateForBilling
        in: query
        schema:
          type: boolean
          default: false
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
        404:
          description: Entitlement not found
          content: {}
  /api/v1/subscriptions/{subscriptionId}/bcd:
    put:
      tags:
      - subscriptions
      summary: Update the BCD associated to a subscription
      operationId: updateSubscriptionBCD
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: effectiveFromDate
        in: query
        schema:
          type: string
      - name: forceNewBcdWithPastEffectiveDate
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionJson'
        required: false
      responses:
        400:
          description: Invalid entitlement supplied
          content: {}
  /api/v1/subscriptions/{subscriptionId}/block:
    put:
      tags:
      - subscriptions
      summary: Block a subscription
      operationId: addSubscriptionBlockingState
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: requestedDate
        in: query
        schema:
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockingStateJson'
        required: false
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
        404:
          description: Subscription not found
          content: {}
  /api/v1/subscriptions/{subscriptionId}/customFields:
    get:
      tags:
      - subscriptions
      summary: Retrieve subscription custom fields
      operationId: getCustomFields
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldJson'
        400:
          description: Invalid subscription id supplied
          content: {}
    post:
      tags:
      - subscriptions
      summary: Add custom fields to subscription
      operationId: createCustomFields
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldJson'
        required: false
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
    delete:
      tags:
      - subscriptions
      summary: Remove custom fields from subscription
      operationId: deleteCustomFields
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: customFieldList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
  /api/v1/subscriptions/{subscriptionId}/tags:
    get:
      tags:
      - subscriptions
      summary: Retrieve subscription tags
      operationId: getTags
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      - name: includedDeleted
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
        400:
          description: Invalid subscription id supplied
          content: {}
        404:
          description: Subscription not found
          content: {}
    post:
      tags:
      - subscriptions
      summary: Add tags to subscription
      operationId: createTags
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
    delete:
      tags:
      - subscriptions
      summary: Remove tags from subscription
      operationId: deleteTags
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: tagList
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
  /api/v1/subscriptions/{subscriptionId}/uncancel:
    put:
      tags:
      - subscriptions
      summary: Un-cancel an entitlement
      operationId: uncancelEntitlementPlan
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: pluginProperty
        in: query
        schema:
          type: array
          items:
            type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid subscription id supplied
          content: {}
        404:
          description: Entitlement not found
          content: {}
  /api/v1/tagDefinitions:
    get:
      tags:
      - tagDefinitions
      summary: List tag definitions
      operationId: getTagDefinitions
      parameters:
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDefinitionJson'
    post:
      tags:
      - tagDefinitions
      summary: Create a tag definition
      operationId: createTagDefinition
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagDefinitionJson'
        required: false
      responses:
        400:
          description: Invalid name or description supplied
          content: {}
  /api/v1/tagDefinitions/{tagDefinitionId}:
    get:
      tags:
      - tagDefinitions
      summary: Retrieve a tag definition
      operationId: getTagDefinition
      parameters:
      - name: tagDefinitionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinitionJson'
        400:
          description: Invalid tagDefinitionId supplied
          content: {}
    delete:
      tags:
      - tagDefinitions
      summary: Delete a tag definition
      operationId: deleteTagDefinition
      parameters:
      - name: tagDefinitionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tagDefinitionId supplied
          content: {}
  /api/v1/tags/pagination:
    get:
      tags:
      - tags
      summary: List tags
      operationId: getTags
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
  /api/v1/tags/search/{searchKey}:
    get:
      tags:
      - tags
      summary: Search tags
      operationId: searchTags
      parameters:
      - name: searchKey
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int64
          default: 100
      - name: audit
        in: query
        schema:
          type: string
          default: NONE
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagJson'
  /api/v1/tenants:
    get:
      tags:
      - tenants
      summary: Retrieve a tenant by its API key
      operationId: getTenantByApiKey
      parameters:
      - name: apiKey
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantJson'
        404:
          description: Tenant not found
          content: {}
    post:
      tags:
      - tenants
      summary: Create a tenant
      operationId: createTenant
      parameters:
      - name: useGlobalDefault
        in: query
        schema:
          type: boolean
          default: false
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantJson'
        required: false
      responses:
        500:
          description: Tenant already exists
          content: {}
  /api/v1/tenants/registerNotificationCallback:
    get:
      tags:
      - tenants
      summary: Retrieve a push notification
      operationId: getPushNotificationCallbacks
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantKeyJson'
        400:
          description: Invalid tenantId supplied
          content: {}
    post:
      tags:
      - tenants
      summary: Create a push notification
      operationId: registerPushNotificationCallback
      parameters:
      - name: cb
        in: query
        schema:
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
    delete:
      tags:
      - tenants
      summary: Delete a push notification
      operationId: deletePushNotificationCallbacks
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
  /api/v1/tenants/uploadPerTenantConfig:
    get:
      tags:
      - tenants
      summary: Retrieve a per tenant configuration (system properties)
      operationId: getPerTenantConfiguration
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantKeyJson'
        400:
          description: Invalid tenantId supplied
          content: {}
    post:
      tags:
      - tenants
      summary: Add a per tenant configuration (system properties)
      operationId: uploadPerTenantConfiguration
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: false
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
    delete:
      tags:
      - tenants
      summary: Delete a per tenant configuration (system properties)
      operationId: deletePerTenantConfiguration
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
  /api/v1/tenants/uploadPerTenantConfig/{keyPrefix}/search:
    get:
      tags:
      - tenants
      summary: Retrieve a per tenant key value based on key prefix
      operationId: getAllPluginConfiguration
      parameters:
      - name: keyPrefix
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantKeyJson'
        400:
          description: Invalid tenantId supplied
          content: {}
  /api/v1/tenants/uploadPluginConfig/{pluginName}:
    get:
      tags:
      - tenants
      summary: Retrieve a per tenant configuration for a plugin
      operationId: getPluginConfiguration
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantKeyJson'
        400:
          description: Invalid tenantId supplied
          content: {}
    post:
      tags:
      - tenants
      summary: Add a per tenant configuration for a plugin
      operationId: uploadPluginConfiguration
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: false
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
    delete:
      tags:
      - tenants
      summary: Delete a per tenant configuration for a plugin
      operationId: deletePluginConfiguration
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
  /api/v1/tenants/uploadPluginPaymentStateMachineConfig/{pluginName}:
    get:
      tags:
      - tenants
      summary: Retrieve a per tenant payment state machine for a plugin
      operationId: getPluginPaymentStateMachineConfig
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantKeyJson'
        400:
          description: Invalid tenantId supplied
          content: {}
    post:
      tags:
      - tenants
      summary: Add a per tenant payment state machine for a plugin
      operationId: uploadPluginPaymentStateMachineConfig
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: false
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
    delete:
      tags:
      - tenants
      summary: Delete a per tenant payment state machine for a plugin
      operationId: deletePluginPaymentStateMachineConfig
      parameters:
      - name: pluginName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
  /api/v1/tenants/userKeyValue/{keyName}:
    get:
      tags:
      - tenants
      summary: Retrieve a per tenant user key/value
      operationId: getUserKeyValue
      parameters:
      - name: keyName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantKeyJson'
        400:
          description: Invalid tenantId supplied
          content: {}
    post:
      tags:
      - tenants
      summary: Add a per tenant user key/value
      operationId: insertUserKeyValue
      parameters:
      - name: keyName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: false
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
    delete:
      tags:
      - tenants
      summary: Delete  a per tenant user key/value
      operationId: deleteUserKeyValue
      parameters:
      - name: keyName
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      responses:
        400:
          description: Invalid tenantId supplied
          content: {}
  /api/v1/tenants/{tenantId}:
    get:
      tags:
      - tenants
      summary: Retrieve a tenant by id
      operationId: getTenant
      parameters:
      - name: tenantId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantJson'
        400:
          description: Invalid tenantId supplied
          content: {}
        404:
          description: Tenant not found
          content: {}
  /api/v1/usages:
    post:
      tags:
      - usages
      summary: Record usage for a subscription
      operationId: recordUsage
      parameters:
      - name: X-GoBilling-CreatedBy
        in: header
        schema:
          type: string
      - name: X-GoBilling-Reason
        in: header
        schema:
          type: string
      - name: X-GoBilling-Comment
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUsageRecordJson'
        required: false
      responses:
        400:
          description: Invalid subscription (e.g. inactive)
          content: {}
  /api/v1/usages/{subscriptionId}:
    get:
      tags:
      - usages
      summary: Retrieve usage for a subscription
      operationId: getAllUsage
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: startDate
        in: query
        schema:
          type: string
      - name: endDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolledUpUsageJson'
        400:
          description: Missing start date or end date
          content: {}
  /api/v1/usages/{subscriptionId}/{unitType}:
    get:
      tags:
      - usages
      summary: Retrieve usage for a subscription and unit type
      operationId: getUsage
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          pattern: \w+-\w+-\w+-\w+-\w+
          type: string
      - name: unitType
        in: path
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        schema:
          type: string
      - name: endDate
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolledUpUsageJson'
        400:
          description: Missing start date or end date
          content: {}
components:
  schemas:
    TenantJson:
      required:
      - apiKey
      - apiSecret
      type: object
      properties:
        tenantId:
          type: string
          format: uuid
          readOnly: true
        externalKey:
          type: string
          readOnly: true
        apiKey:
          type: string
          readOnly: true
        apiSecret:
          type: string
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    OverdueStateJson:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        externalMessage:
          type: string
          readOnly: true
        daysBetweenPaymentRetries:
          type: array
          items:
            type: integer
            format: int32
        disableEntitlementAndChangesBlocked:
          type: boolean
          readOnly: true
          default: false
        blockChanges:
          type: boolean
          readOnly: true
          default: false
        clearState:
          type: boolean
          readOnly: true
          default: false
        reevaluationIntervalDays:
          type: integer
          format: int32
          readOnly: true
    InvoicePaymentJson:
      type: object
      properties:
        targetInvoiceId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        paymentId:
          type: string
          format: uuid
          readOnly: true
        paymentNumber:
          type: string
          readOnly: true
        paymentExternalKey:
          type: string
          readOnly: true
        authAmount:
          type: number
          readOnly: true
        capturedAmount:
          type: number
          readOnly: true
        purchasedAmount:
          type: number
          readOnly: true
        refundedAmount:
          type: number
          readOnly: true
        creditedAmount:
          type: number
          readOnly: true
        currency:
          type: string
          readOnly: true
        paymentMethodId:
          type: string
          format: uuid
          readOnly: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionJson'
        paymentAttempts:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAttemptJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    HostedPaymentPageFormDescriptorJson:
      type: object
      properties:
        kbAccountId:
          type: string
          format: uuid
          readOnly: true
        formMethod:
          type: string
          readOnly: true
        formUrl:
          type: string
          readOnly: true
        formFields:
          type: object
          additionalProperties:
            type: object
            properties: {}
        properties:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    PriceJson:
      type: object
      properties:
        currency:
          type: string
          readOnly: true
        value:
          type: number
          readOnly: true
    InternationalPrice:
      type: object
      properties:
        prices:
          type: array
          items:
            $ref: '#/components/schemas/Price'
        zero:
          type: boolean
          default: false
    Product:
      type: object
      properties:
        category:
          type: string
          enum:
          - BASE
          - ADD_ON
          - STANDALONE
        included:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        available:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        limits:
          type: array
          items:
            $ref: '#/components/schemas/Limit'
        catalogName:
          type: string
        name:
          type: string
    EventSubscriptionJson:
      type: object
      properties:
        eventId:
          type: string
          readOnly: true
        billingPeriod:
          type: string
          readOnly: true
        effectiveDate:
          type: string
          format: date
          readOnly: true
        plan:
          type: string
          readOnly: true
        product:
          type: string
          readOnly: true
        priceList:
          type: string
          readOnly: true
        eventType:
          type: string
          readOnly: true
          enum:
          - START_ENTITLEMENT
          - START_BILLING
          - PAUSE_ENTITLEMENT
          - PAUSE_BILLING
          - RESUME_ENTITLEMENT
          - RESUME_BILLING
          - PHASE
          - CHANGE
          - STOP_ENTITLEMENT
          - STOP_BILLING
          - SERVICE_STATE_CHANGE
        isBlockedBilling:
          type: boolean
          readOnly: true
          default: false
        isBlockedEntitlement:
          type: boolean
          readOnly: true
          default: false
        serviceName:
          type: string
          readOnly: true
        serviceStateName:
          type: string
          readOnly: true
        phase:
          type: string
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    AdminPaymentJson:
      type: object
      properties:
        lastSuccessPaymentState:
          type: string
          readOnly: true
        currentPaymentStateName:
          type: string
          readOnly: true
        transactionStatus:
          type: string
          readOnly: true
    TenantKeyJson:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        values:
          type: array
          items:
            type: string
    CreditJson:
      required:
      - accountId
      - creditAmount
      type: object
      properties:
        creditAmount:
          type: number
          readOnly: true
        currency:
          type: string
          readOnly: true
        invoiceId:
          type: string
          format: uuid
          readOnly: true
        invoiceNumber:
          type: string
          readOnly: true
        effectiveDate:
          type: string
          format: date
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        description:
          type: string
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    BlockingStateJson:
      type: object
      properties:
        blockedId:
          type: string
          format: uuid
          readOnly: true
        stateName:
          type: string
          readOnly: true
        service:
          type: string
          readOnly: true
        blockChange:
          type: boolean
          readOnly: true
          default: false
        blockEntitlement:
          type: boolean
          readOnly: true
          default: false
        blockBilling:
          type: boolean
          readOnly: true
          default: false
        effectiveDate:
          type: string
          format: date-time
          readOnly: true
        type:
          type: string
          readOnly: true
          enum:
          - SUBSCRIPTION
          - SUBSCRIPTION_BUNDLE
          - ACCOUNT
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    Unit:
      type: object
      properties:
        name:
          type: string
    AccountJson:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        firstNameLength:
          type: integer
          format: int32
          readOnly: true
        externalKey:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        billCycleDayLocal:
          type: integer
          format: int32
          readOnly: true
        currency:
          type: string
          readOnly: true
        parentAccountId:
          type: string
          format: uuid
          readOnly: true
        isPaymentDelegatedToParent:
          type: boolean
          readOnly: true
          default: false
        paymentMethodId:
          type: string
          format: uuid
          readOnly: true
        timeZone:
          type: string
          readOnly: true
        address1:
          type: string
          readOnly: true
        address2:
          type: string
          readOnly: true
        postalCode:
          type: string
          readOnly: true
        company:
          type: string
          readOnly: true
        city:
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        locale:
          type: string
          readOnly: true
        phone:
          type: string
          readOnly: true
        notes:
          type: string
          readOnly: true
        isMigrated:
          type: boolean
          readOnly: true
          default: false
        isNotifiedForInvoices:
          type: boolean
          readOnly: true
          default: false
        accountBalance:
          type: number
          readOnly: true
        accountCBA:
          type: number
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    NodeCommandPropertyJson:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        value:
          type: object
          properties: {}
    AccountEmailJson:
      required:
      - email
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    OverdueStateConfigJson:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        isClearState:
          type: boolean
          readOnly: true
          default: false
        condition:
          $ref: '#/components/schemas/OverdueConditionJson'
        externalMessage:
          type: string
          readOnly: true
        blockChanges:
          type: boolean
          readOnly: true
          default: false
        disableEntitlement:
          type: boolean
          readOnly: true
          default: false
        subscriptionCancellationPolicy:
          type: string
          readOnly: true
          enum:
          - END_OF_TERM
          - IMMEDIATE
          - NONE
        autoReevaluationIntervalDays:
          type: integer
          format: int32
          readOnly: true
    InvoiceEmailJson:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        isNotifiedForInvoices:
          type: boolean
          default: false
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    InvoiceJson:
      type: object
      properties:
        amount:
          type: number
          readOnly: true
        currency:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        creditAdj:
          type: number
          readOnly: true
        refundAdj:
          type: number
          readOnly: true
        invoiceId:
          type: string
          format: uuid
          readOnly: true
        invoiceDate:
          type: string
          format: date
          readOnly: true
        targetDate:
          type: string
          format: date
          readOnly: true
        invoiceNumber:
          type: string
          readOnly: true
        balance:
          type: number
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        bundleKeys:
          type: string
          readOnly: true
        credits:
          type: array
          items:
            $ref: '#/components/schemas/CreditJson'
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemJson'
        isParentInvoice:
          type: boolean
          readOnly: true
          default: false
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    CustomFieldJson:
      required:
      - name
      - value
      type: object
      properties:
        customFieldId:
          type: string
          format: uuid
          readOnly: true
        objectId:
          type: string
          format: uuid
          readOnly: true
        objectType:
          type: string
          readOnly: true
          enum:
          - ACCOUNT
          - ACCOUNT_EMAIL
          - BLOCKING_STATES
          - BUNDLE
          - CUSTOM_FIELD
          - INVOICE
          - PAYMENT
          - TRANSACTION
          - INVOICE_ITEM
          - INVOICE_PAYMENT
          - SUBSCRIPTION
          - SUBSCRIPTION_EVENT
          - SERVICE_BROADCAST
          - PAYMENT_ATTEMPT
          - PAYMENT_METHOD
          - REFUND
          - TAG
          - TAG_DEFINITION
          - TENANT
          - TENANT_KVS
        name:
          type: string
          readOnly: true
        value:
          type: string
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    UsageJson:
      type: object
      properties:
        billingPeriod:
          type: string
          readOnly: true
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/TierJson'
    InvoicePaymentTransactionJson:
      type: object
      properties:
        transactionId:
          type: string
          format: uuid
          readOnly: true
        transactionExternalKey:
          type: string
          readOnly: true
        paymentId:
          type: string
          description: Associated payment id, required when notifying state transitions
          format: uuid
          readOnly: true
        paymentExternalKey:
          type: string
          readOnly: true
        transactionType:
          type: string
          readOnly: true
          enum:
          - AUTHORIZE
          - CAPTURE
          - CHARGEBACK
          - CREDIT
          - PURCHASE
          - REFUND
          - VOID
        amount:
          type: number
          description: Transaction amount, required except for void operations
          readOnly: true
        currency:
          type: string
          description: Amount currency (account currency unless specified)
          readOnly: true
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GGP
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - IMP
          - INR
          - IQD
          - IRR
          - ISK
          - JEP
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SPL
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TVD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XDR
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - ZWD
          - BTC
        effectiveDate:
          type: string
          format: date-time
          readOnly: true
        processedAmount:
          type: number
          readOnly: true
        processedCurrency:
          type: string
          readOnly: true
        status:
          type: string
          description: Transaction status, required for state change notifications
          readOnly: true
          enum:
          - SUCCESS
          - UNKNOWN
          - PENDING
          - PAYMENT_FAILURE
          - PLUGIN_FAILURE
          - PAYMENT_SYSTEM_OFF
        gatewayErrorCode:
          type: string
          readOnly: true
        gatewayErrorMsg:
          type: string
          readOnly: true
        firstPaymentReferenceId:
          type: string
          readOnly: true
        secondPaymentReferenceId:
          type: string
          readOnly: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PluginPropertyJson'
        isAdjusted:
          type: boolean
          readOnly: true
          default: false
        adjustments:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
      description: Payment transaction
    IterablePluginPropertyJson:
      type: object
    BundleTimelineJson:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        bundleId:
          type: string
          format: uuid
          readOnly: true
        externalKey:
          type: string
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventSubscriptionJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    TierJson:
      type: object
      properties:
        limits:
          type: array
          items:
            $ref: '#/components/schemas/LimitJson'
        fixedPrice:
          type: array
          items:
            $ref: '#/components/schemas/PriceJson'
        recurringPrice:
          type: array
          items:
            $ref: '#/components/schemas/PriceJson'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/TieredBlockJson'
    PriceListJson:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        plans:
          type: array
          items:
            type: string
    PaymentMethodPluginDetailJson:
      type: object
      properties:
        externalPaymentMethodId:
          type: string
          readOnly: true
        isDefaultPaymentMethod:
          type: boolean
          readOnly: true
          default: false
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PluginPropertyJson'
    Tier:
      type: object
      properties:
        fixedPrice:
          $ref: '#/components/schemas/InternationalPrice'
        recurringPrice:
          $ref: '#/components/schemas/InternationalPrice'
        limits:
          type: array
          items:
            $ref: '#/components/schemas/Limit'
        tieredBlocks:
          type: array
          items:
            $ref: '#/components/schemas/TieredBlock'
    UserRolesJson:
      required:
      - password
      - roles
      - username
      type: object
      properties:
        username:
          type: string
          readOnly: true
        password:
          type: string
          readOnly: true
        roles:
          type: array
          items:
            type: string
    Duration:
      type: object
      properties:
        unit:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - UNLIMITED
        number:
          type: integer
          format: int32
    SimplePlanJson:
      type: object
      properties:
        planId:
          type: string
          readOnly: true
        productName:
          type: string
          readOnly: true
        productCategory:
          type: string
          readOnly: true
          enum:
          - BASE
          - ADD_ON
          - STANDALONE
        currency:
          type: string
          readOnly: true
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GGP
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - IMP
          - INR
          - IQD
          - IRR
          - ISK
          - JEP
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SPL
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TVD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XDR
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - ZWD
          - BTC
        amount:
          type: number
          readOnly: true
        billingPeriod:
          type: string
          readOnly: true
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        trialLength:
          type: integer
          format: int32
          readOnly: true
        trialTimeUnit:
          type: string
          readOnly: true
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - UNLIMITED
        availableBaseProducts:
          type: array
          items:
            type: string
    ProductJson:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        plans:
          type: array
          items:
            $ref: '#/components/schemas/PlanJson'
        included:
          type: array
          items:
            type: string
        available:
          type: array
          items:
            type: string
    HostedPaymentPageFieldsJson:
      type: object
      properties:
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/PluginPropertyJson'
    IteratorPlanPhase:
      type: object
    PhasePriceOverrideJson:
      type: object
      properties:
        planName:
          type: string
          readOnly: true
        phaseName:
          type: string
          readOnly: true
        phaseType:
          type: string
          readOnly: true
        fixedPrice:
          type: number
          readOnly: true
        recurringPrice:
          type: number
          readOnly: true
    PlanDetailJson:
      type: object
      properties:
        product:
          type: string
          readOnly: true
        plan:
          type: string
          readOnly: true
        priceList:
          type: string
          readOnly: true
        finalPhaseBillingPeriod:
          type: string
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        finalPhaseRecurringPrice:
          type: array
          items:
            $ref: '#/components/schemas/PriceJson'
    RolledUpUsageJson:
      type: object
      properties:
        subscriptionId:
          type: string
          format: uuid
          readOnly: true
        startDate:
          type: string
          format: date
          readOnly: true
        endDate:
          type: string
          format: date
          readOnly: true
        rolledUpUnits:
          type: array
          items:
            $ref: '#/components/schemas/RolledUpUnitJson'
    PaymentMethodJson:
      type: object
      properties:
        paymentMethodId:
          type: string
          format: uuid
          readOnly: true
        externalKey:
          type: string
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        isDefault:
          type: boolean
          readOnly: true
          default: false
        pluginName:
          type: string
          readOnly: true
        pluginInfo:
          $ref: '#/components/schemas/PaymentMethodPluginDetailJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    RolledUpUnitJson:
      type: object
      properties:
        unitType:
          type: string
          readOnly: true
        amount:
          type: integer
          format: int64
          readOnly: true
    Price:
      type: object
      properties:
        currency:
          type: string
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GGP
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - IMP
          - INR
          - IQD
          - IRR
          - ISK
          - JEP
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SPL
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TVD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XDR
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - ZWD
          - BTC
        value:
          type: number
    AccountTimelineJson:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountJson'
        bundles:
          type: array
          items:
            $ref: '#/components/schemas/BundleJson'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceJson'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePaymentJson'
    PluginServiceInfoJson:
      type: object
      properties:
        serviceTypeName:
          type: string
          readOnly: true
        registrationName:
          type: string
          readOnly: true
    Block:
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/Unit'
        price:
          $ref: '#/components/schemas/InternationalPrice'
        minTopUpCredit:
          type: number
          format: double
        type:
          type: string
          enum:
          - VANILLA
          - TOP_UP
          - TIERED
        size:
          type: number
          format: double
    SubscriptionUsageRecordJson:
      required:
      - subscriptionId
      - unitUsageRecords
      type: object
      properties:
        subscriptionId:
          type: string
          format: uuid
          readOnly: true
        trackingId:
          type: string
          readOnly: true
        unitUsageRecords:
          type: array
          items:
            $ref: '#/components/schemas/UnitUsageRecordJson'
    IterableInvoiceItemJson:
      type: object
    InvoiceDryRunJson:
      type: object
      properties:
        dryRunType:
          type: string
          readOnly: true
        dryRunAction:
          type: string
          readOnly: true
        phaseType:
          type: string
          readOnly: true
        productName:
          type: string
          readOnly: true
        productCategory:
          type: string
          readOnly: true
        billingPeriod:
          type: string
          readOnly: true
        priceListName:
          type: string
          readOnly: true
        subscriptionId:
          type: string
          readOnly: true
        bundleId:
          type: string
          readOnly: true
        effectiveDate:
          type: string
          format: date
          readOnly: true
        billingPolicy:
          type: string
          readOnly: true
        priceOverrides:
          type: array
          items:
            $ref: '#/components/schemas/PhasePriceOverrideJson'
    NodeCommandJson:
      type: object
      properties:
        systemCommandType:
          type: boolean
          readOnly: true
          default: false
        nodeCommandType:
          type: string
          readOnly: true
        nodeCommandProperties:
          type: array
          items:
            $ref: '#/components/schemas/NodeCommandPropertyJson'
    LimitJson:
      type: object
      properties:
        unit:
          type: string
          readOnly: true
        max:
          type: string
          readOnly: true
        min:
          type: string
          readOnly: true
    SubscriptionJson:
      required:
      - billingPeriod
      - planName
      - priceList
      - productCategory
      - productName
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        bundleId:
          type: string
          format: uuid
          readOnly: true
        subscriptionId:
          type: string
          format: uuid
          readOnly: true
        externalKey:
          type: string
          readOnly: true
        startDate:
          type: string
          format: date
          readOnly: true
        productName:
          type: string
          readOnly: true
        productCategory:
          type: string
          readOnly: true
          enum:
          - BASE
          - ADD_ON
          - STANDALONE
        billingPeriod:
          type: string
          readOnly: true
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        phaseType:
          type: string
          readOnly: true
          enum:
          - TRIAL
          - DISCOUNT
          - FIXEDTERM
          - EVERGREEN
        priceList:
          type: string
          readOnly: true
        planName:
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
          enum:
          - PENDING
          - ACTIVE
          - BLOCKED
          - CANCELLED
        sourceType:
          type: string
          readOnly: true
          enum:
          - NATIVE
          - MIGRATED
          - TRANSFERRED
        cancelledDate:
          type: string
          format: date
          readOnly: true
        chargedThroughDate:
          type: string
          format: date
          readOnly: true
        billingStartDate:
          type: string
          format: date
          readOnly: true
        billingEndDate:
          type: string
          format: date
          readOnly: true
        billCycleDayLocal:
          type: integer
          format: int32
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventSubscriptionJson'
        priceOverrides:
          type: array
          items:
            $ref: '#/components/schemas/PhasePriceOverrideJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    InvoiceItemJson:
      required:
      - accountId
      - invoiceItemId
      type: object
      properties:
        invoiceItemId:
          type: string
          format: uuid
          readOnly: true
        invoiceId:
          type: string
          format: uuid
          readOnly: true
        linkedInvoiceItemId:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        childAccountId:
          type: string
          format: uuid
          readOnly: true
        bundleId:
          type: string
          format: uuid
          readOnly: true
        subscriptionId:
          type: string
          format: uuid
          readOnly: true
        planName:
          type: string
          readOnly: true
        phaseName:
          type: string
          readOnly: true
        usageName:
          type: string
          readOnly: true
        itemType:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        startDate:
          type: string
          format: date
          readOnly: true
        endDate:
          type: string
          format: date
          readOnly: true
        amount:
          type: number
          readOnly: true
        currency:
          type: string
          readOnly: true
        childItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    BulkBaseSubscriptionAndAddOnsJson:
      required:
      - baseEntitlementAndAddOns
      type: object
      properties:
        baseEntitlementAndAddOns:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionJson'
    UsageRecordJson:
      type: object
      properties:
        recordDate:
          type: string
          format: date
          readOnly: true
        amount:
          type: integer
          format: int64
          readOnly: true
    StaticCatalog:
      type: object
      properties:
        effectiveDate:
          type: string
          format: date-time
        availableBasePlanListings:
          type: array
          items:
            $ref: '#/components/schemas/Listing'
        recurringBillingMode:
          type: string
          enum:
          - IN_ADVANCE
          - IN_ARREAR
        catalogName:
          type: string
        currentProducts:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        currentUnits:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        currentSupportedCurrencies:
          type: array
          items:
            type: string
            enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTN
            - BWP
            - BYR
            - BZD
            - CAD
            - CDF
            - CHF
            - CLP
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LVL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SPL
            - SRD
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TVD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XCD
            - XDR
            - XOF
            - XPF
            - YER
            - ZAR
            - ZMW
            - ZWD
            - BTC
        currentPlans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    BundleJson:
      required:
      - accountId
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        bundleId:
          type: string
          format: uuid
          readOnly: true
        externalKey:
          type: string
          readOnly: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionJson'
        timeline:
          $ref: '#/components/schemas/BundleTimelineJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    RoleDefinitionJson:
      required:
      - permissions
      - role
      type: object
      properties:
        role:
          type: string
          readOnly: true
        permissions:
          type: array
          items:
            type: string
    TieredBlock:
      type: object
      properties:
        max:
          type: number
          format: double
        unit:
          $ref: '#/components/schemas/Unit'
        price:
          $ref: '#/components/schemas/InternationalPrice'
        minTopUpCredit:
          type: number
          format: double
        type:
          type: string
          enum:
          - VANILLA
          - TOP_UP
          - TIERED
        size:
          type: number
          format: double
    Recurring:
      type: object
      properties:
        billingPeriod:
          type: string
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        recurringPrice:
          $ref: '#/components/schemas/InternationalPrice'
    DurationJson:
      type: object
      properties:
        unit:
          type: string
          readOnly: true
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - UNLIMITED
        number:
          type: integer
          format: int32
          readOnly: true
    TagDefinitionJson:
      required:
      - description
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        isControlTag:
          type: boolean
          readOnly: true
          default: false
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        applicableObjectTypes:
          type: array
          items:
            type: string
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    PlanPhase:
      type: object
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        usages:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
        phaseType:
          type: string
          enum:
          - TRIAL
          - DISCOUNT
          - FIXEDTERM
          - EVERGREEN
        recurring:
          $ref: '#/components/schemas/Recurring'
        fixed:
          $ref: '#/components/schemas/Fixed'
        name:
          type: string
    OverdueConditionJson:
      type: object
      properties:
        timeSinceEarliestUnpaidInvoiceEqualsOrExceeds:
          $ref: '#/components/schemas/DurationJson'
        controlTagInclusion:
          type: string
          readOnly: true
          enum:
          - AUTO_PAY_OFF
          - AUTO_INVOICING_OFF
          - OVERDUE_ENFORCEMENT_OFF
          - WRITTEN_OFF
          - MANUAL_PAY
          - TEST
          - PARTNER
        controlTagExclusion:
          type: string
          readOnly: true
          enum:
          - AUTO_PAY_OFF
          - AUTO_INVOICING_OFF
          - OVERDUE_ENFORCEMENT_OFF
          - WRITTEN_OFF
          - MANUAL_PAY
          - TEST
          - PARTNER
        numberOfUnpaidInvoicesEqualsOrExceeds:
          type: integer
          format: int32
          readOnly: true
        responseForLastFailedPayment:
          type: array
          items:
            type: string
            enum:
            - INVALID_CARD
            - EXPIRED_CARD
            - LOST_OR_STOLEN_CARD
            - DO_NOT_HONOR
            - INSUFFICIENT_FUNDS
            - DECLINE
            - PROCESSING_ERROR
            - INVALID_AMOUNT
            - DUPLICATE_TRANSACTION
            - OTHER
        totalUnpaidInvoiceBalanceEqualsOrExceeds:
          type: number
          readOnly: true
    PriceList:
      type: object
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        name:
          type: string
    Fixed:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/InternationalPrice'
        type:
          type: string
          enum:
          - ONE_TIME
    UnitUsageRecordJson:
      type: object
      properties:
        unitType:
          type: string
          readOnly: true
        usageRecords:
          type: array
          items:
            $ref: '#/components/schemas/UsageRecordJson'
    TagJson:
      type: object
      properties:
        tagId:
          type: string
          format: uuid
          readOnly: true
        objectType:
          type: string
          readOnly: true
          enum:
          - ACCOUNT
          - ACCOUNT_EMAIL
          - BLOCKING_STATES
          - BUNDLE
          - CUSTOM_FIELD
          - INVOICE
          - PAYMENT
          - TRANSACTION
          - INVOICE_ITEM
          - INVOICE_PAYMENT
          - SUBSCRIPTION
          - SUBSCRIPTION_EVENT
          - SERVICE_BROADCAST
          - PAYMENT_ATTEMPT
          - PAYMENT_METHOD
          - REFUND
          - TAG
          - TAG_DEFINITION
          - TENANT
          - TENANT_KVS
        objectId:
          type: string
          format: uuid
          readOnly: true
        tagDefinitionId:
          type: string
          format: uuid
          readOnly: true
        tagDefinitionName:
          type: string
          readOnly: true
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    Usage:
      type: object
      properties:
        billingPeriod:
          type: string
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        fixedPrice:
          $ref: '#/components/schemas/InternationalPrice'
        recurringPrice:
          $ref: '#/components/schemas/InternationalPrice'
        tiers:
          type: array
          items:
            $ref: '#/components/schemas/Tier'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/Block'
        limits:
          type: array
          items:
            $ref: '#/components/schemas/Limit'
        billingMode:
          type: string
          enum:
          - IN_ADVANCE
          - IN_ARREAR
        usageType:
          type: string
          enum:
          - CAPACITY
          - CONSUMABLE
        name:
          type: string
    PaymentTransactionJson:
      type: object
      properties:
        transactionId:
          type: string
          format: uuid
          readOnly: true
        transactionExternalKey:
          type: string
          readOnly: true
        paymentId:
          type: string
          description: Associated payment id, required when notifying state transitions
          format: uuid
          readOnly: true
        paymentExternalKey:
          type: string
          readOnly: true
        transactionType:
          type: string
          readOnly: true
          enum:
          - AUTHORIZE
          - CAPTURE
          - CHARGEBACK
          - CREDIT
          - PURCHASE
          - REFUND
          - VOID
        amount:
          type: number
          description: Transaction amount, required except for void operations
          readOnly: true
        currency:
          type: string
          description: Amount currency (account currency unless specified)
          readOnly: true
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GGP
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - IMP
          - INR
          - IQD
          - IRR
          - ISK
          - JEP
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SPL
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TVD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XDR
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - ZWD
          - BTC
        effectiveDate:
          type: string
          format: date-time
          readOnly: true
        processedAmount:
          type: number
          readOnly: true
        processedCurrency:
          type: string
          readOnly: true
        status:
          type: string
          description: Transaction status, required for state change notifications
          readOnly: true
          enum:
          - SUCCESS
          - UNKNOWN
          - PENDING
          - PAYMENT_FAILURE
          - PLUGIN_FAILURE
          - PAYMENT_SYSTEM_OFF
        gatewayErrorCode:
          type: string
          readOnly: true
        gatewayErrorMsg:
          type: string
          readOnly: true
        firstPaymentReferenceId:
          type: string
          readOnly: true
        secondPaymentReferenceId:
          type: string
          readOnly: true
        properties:
          type: array
          items:
            $ref: '#/components/schemas/PluginPropertyJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
      description: Payment transaction
    SubjectJson:
      type: object
      properties:
        principal:
          type: string
          readOnly: true
        isAuthenticated:
          type: boolean
          readOnly: true
          default: false
        isRemembered:
          type: boolean
          readOnly: true
          default: false
        session:
          $ref: '#/components/schemas/SessionJson'
    PluginPropertyJson:
      type: object
      properties:
        key:
          type: string
          readOnly: true
        value:
          type: string
          readOnly: true
        isUpdatable:
          type: boolean
          readOnly: true
          default: false
    PlanJson:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        billingPeriod:
          type: string
          readOnly: true
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        phases:
          type: array
          items:
            $ref: '#/components/schemas/PhaseJson'
    TieredBlockJson:
      type: object
      properties:
        unit:
          type: string
          readOnly: true
        size:
          type: string
          readOnly: true
        max:
          type: string
          readOnly: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/PriceJson'
    PhaseJson:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/PriceJson'
        fixedPrices:
          type: array
          items:
            $ref: '#/components/schemas/PriceJson'
        duration:
          $ref: '#/components/schemas/DurationJson'
        usages:
          type: array
          items:
            $ref: '#/components/schemas/UsageJson'
    PluginInfoJson:
      type: object
      properties:
        bundleSymbolicName:
          type: string
          readOnly: true
        pluginKey:
          type: string
          readOnly: true
        pluginName:
          type: string
          readOnly: true
        version:
          type: string
          readOnly: true
        state:
          type: string
          readOnly: true
        isSelectedForStart:
          type: boolean
          readOnly: true
          default: false
        services:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PluginServiceInfoJson'
    AuditLogJson:
      type: object
      properties:
        changeType:
          type: string
          readOnly: true
        changeDate:
          type: string
          format: date-time
          readOnly: true
        changedBy:
          type: string
          readOnly: true
        reasonCode:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
        userToken:
          type: string
          readOnly: true
    Plan:
      type: object
      properties:
        recurringBillingPeriod:
          type: string
          enum:
          - DAILY
          - WEEKLY
          - BIWEEKLY
          - THIRTY_DAYS
          - MONTHLY
          - QUARTERLY
          - BIANNUAL
          - ANNUAL
          - BIENNIAL
          - NO_BILLING_PERIOD
        priceListName:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        allPhases:
          type: array
          items:
            $ref: '#/components/schemas/PlanPhase'
        finalPhase:
          $ref: '#/components/schemas/PlanPhase'
        plansAllowedInBundle:
          type: integer
          format: int32
        effectiveDateForExistingSubscriptions:
          type: string
          format: date-time
        initialPhases:
          type: array
          items:
            $ref: '#/components/schemas/PlanPhase'
        initialPhaseIterator:
          $ref: '#/components/schemas/IteratorPlanPhase'
        name:
          type: string
    ComboPaymentTransactionJson:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountJson'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodJson'
        transaction:
          $ref: '#/components/schemas/PaymentTransactionJson'
        paymentMethodPluginProperties:
          $ref: '#/components/schemas/IterablePluginPropertyJson'
        transactionPluginProperties:
          $ref: '#/components/schemas/IterablePluginPropertyJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
        transactionType:
          type: string
    SessionJson:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        startDate:
          type: string
          format: date-time
          readOnly: true
        lastAccessDate:
          type: string
          format: date-time
          readOnly: true
        timeout:
          type: integer
          format: int64
          readOnly: true
        host:
          type: string
          readOnly: true
    ClockResource:
      type: object
      properties:
        currentUtcTime:
          type: string
          format: date-time
          readOnly: true
        timeZone:
          type: string
          readOnly: true
        localDate:
          type: string
          format: date
          readOnly: true
    OverdueJson:
      type: object
      properties:
        initialReevaluationInterval:
          type: integer
          format: int32
          readOnly: true
        overdueStates:
          type: array
          items:
            $ref: '#/components/schemas/OverdueStateConfigJson'
    PaymentAttemptJson:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        paymentMethodId:
          type: string
          format: uuid
          readOnly: true
        paymentExternalKey:
          type: string
          readOnly: true
        transactionId:
          type: string
          format: uuid
          readOnly: true
        transactionExternalKey:
          type: string
          readOnly: true
        transactionType:
          type: string
          readOnly: true
          enum:
          - AUTHORIZE
          - CAPTURE
          - CHARGEBACK
          - CREDIT
          - PURCHASE
          - REFUND
          - VOID
        effectiveDate:
          type: string
          format: date-time
          readOnly: true
        stateName:
          type: string
          readOnly: true
        amount:
          type: number
          description: Transaction amount, required except for void operations
          readOnly: true
        currency:
          type: string
          description: Amount currency (account currency unless specified)
          readOnly: true
          enum:
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BHD
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BTN
          - BWP
          - BYR
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CUC
          - CUP
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ERN
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GGP
          - GHS
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - IMP
          - INR
          - IQD
          - IRR
          - ISK
          - JEP
          - JMD
          - JOD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KPW
          - KRW
          - KWD
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - LTL
          - LVL
          - LYD
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SDG
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SPL
          - SRD
          - STD
          - SVC
          - SYP
          - SZL
          - THB
          - TJS
          - TMT
          - TND
          - TOP
          - TRY
          - TTD
          - TVD
          - TWD
          - TZS
          - UAH
          - UGX
          - USD
          - UYU
          - UZS
          - VEF
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XDR
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - ZWD
          - BTC
        pluginName:
          type: string
          readOnly: true
        pluginProperties:
          type: array
          items:
            $ref: '#/components/schemas/PluginPropertyJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
      description: Payment attempt
    Listing:
      type: object
      properties:
        priceList:
          $ref: '#/components/schemas/PriceList'
        plan:
          $ref: '#/components/schemas/Plan'
    ComboHostedPaymentPageJson:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountJson'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodJson'
        paymentMethodPluginProperties:
          $ref: '#/components/schemas/IterablePluginPropertyJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
        hostedPaymentPageFieldsJson:
          $ref: '#/components/schemas/HostedPaymentPageFieldsJson'
    PaymentJson:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          readOnly: true
        paymentId:
          type: string
          format: uuid
          readOnly: true
        paymentNumber:
          type: string
          readOnly: true
        paymentExternalKey:
          type: string
          readOnly: true
        authAmount:
          type: number
          readOnly: true
        capturedAmount:
          type: number
          readOnly: true
        purchasedAmount:
          type: number
          readOnly: true
        refundedAmount:
          type: number
          readOnly: true
        creditedAmount:
          type: number
          readOnly: true
        currency:
          type: string
          readOnly: true
        paymentMethodId:
          type: string
          format: uuid
          readOnly: true
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransactionJson'
        paymentAttempts:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAttemptJson'
        auditLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogJson'
    Limit:
      type: object
      properties:
        max:
          type: number
          format: double
        unit:
          $ref: '#/components/schemas/Unit'
        min:
          type: number
          format: double
